FROM ubuntu:trusty

MAINTAINER Sandro Rodriguez Garzon (sandro.rodriguezgarzon@tu-berlin.de)

# Install Nginx.
RUN \
    sudo apt-get update && \
    sudo apt-get install nano && \
    sudo apt-get install -y nginx && \
    mkdir /var/www && \
    mkdir /var/www/admindash

# For healthcheck
RUN sudo apt-get update && \
    sudo apt-get install -y curl

COPY ./docker/nginx/default /etc/nginx/sites-available/default
COPY ./build/ /var/www/admindash/

RUN \
    sudo chown -R root:www-data /var/www/admindash/

# Expose ports.
EXPOSE 3000
#EXPOSE 443

# Starts Nginx in the foreground, not as a deamon.
ENTRYPOINT ["/usr/sbin/nginx","-g","daemon off;"]


FROM ubuntu:trusty

#MAINTAINER Sandro Rodriguez Garzon (sandro.rodriguezgarzon@tu-berlin.de)

# Install Nginx.
RUN \
    sudo apt-get update && \
    sudo apt-get install nano && \
    sudo apt-get install -y nginx 

# For healthcheck
RUN sudo apt-get update && \
    sudo apt-get install -y curl

# install nodejs
RUN \
    curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - && \
    sudo apt-get install -y nodejs

RUN \
    mkdir -p /var/www/admindash/src && \
    mkdir -p /var/www/admindash/public

WORKDIR /var/www/admindash

COPY ./docker/nginx/default /etc/nginx/sites-available/default

# install packets
COPY ./package.json /var/www/admindash/
RUN sudo npm install

# add source file into docker

ADD public/ /var/www/admindash/public/
ADD src/ /var/www/admindash/src/
COPY .babelrc /var/www/admindash/
COPY .env /var/www/admindash/

#RUN \
#    sudo chown -R root:www-data /var/www/admindash/


# build production 
#RUN sudo npm run build

# Expose ports.
EXPOSE 3000

#EXPOSE 443

# Starts Nginx in the foreground, not as a deamon.
#ENTRYPOINT ["/usr/sbin/nginx","-g","daemon off;"]
CMD ["npm", "start"]





